{"version":3,"sources":["logo.svg","components/Form.jsx","js/paintLogic.js","js/parseFile.js","App.js","reportWebVitals.js","index.js"],"names":["FormFile","useState","canvas","line","rectangle","bucketfill","points","setPoints","fileName","setFileName","setCanvas","lines","setLines","rectangles","setRectangles","bucketfills","setBucketfills","result","setResult","useEffect","width","height","borderH","repeat","borderV","i","push","newCanvas","canvasCopy","slice","forEach","map","str","index","y1","y2","length","oldLine","newLine","split","el","x1","x2","join","splice","e","console","log","linesCopy","isVertical","isHorizontal","newRectangle","x","y","color","rectanglesCopy","point","queue","pop","newBucketfill","text","Form","Row","Col","md","File","id","label","custom","accept","feedbackTooltip","onChange","target","files","name","file","reader","FileReader","readAsText","onload","arr","positions","onerror","error","loadend","abort","parse","value","Button","onClick","element","document","createElement","Blob","type","href","URL","createObjectURL","download","body","appendChild","click","alert","className","App","Container","fluid","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.76c5462f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport {\r\n  newCanvas,\r\n  newLine,\r\n  newRectangle,\r\n  newBucketfill,\r\n} from \"../js/paintLogic\";\r\nimport { parse } from \"../js/parseFile\";\r\n\r\nfunction FormFile() {\r\n  const [points, setPoints] = useState({\r\n    canvas: {},\r\n    line: [],\r\n    rectangle: [],\r\n    bucketfill: {},\r\n  });\r\n  const [fileName, setFileName] = useState(\"\");\r\n  const [canvas, setCanvas] = useState([]);\r\n  const [lines, setLines] = useState([]);\r\n  const [rectangles, setRectangles] = useState([]);\r\n  const [bucketfills, setBucketfills] = useState([]);\r\n  const [result, setResult] = useState([]);\r\n  const uploadFile = (e) => {\r\n    setResult([]);\r\n    setPoints((points) => ({\r\n      ...points,\r\n      canvas: {},\r\n      line: [],\r\n      rectangle: [],\r\n      bucketfill: {},\r\n    }));\r\n    setFileName(e.target.files[0].name);\r\n    const file = e.target.files[0];\r\n    parse(file, setPoints);\r\n    e.target.value = \"\";\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (points.canvas) {\r\n      newCanvas(points.canvas, setCanvas);\r\n    }\r\n  }, [points.bucketfill]);\r\n\r\n  useEffect(() => {\r\n    if (points.line) {\r\n      newLine(points.line, canvas, setLines);\r\n    }\r\n  }, [canvas]);\r\n\r\n  useEffect(() => {\r\n    if (points.rectangle) {\r\n      newRectangle(points.rectangle, lines, setRectangles);\r\n    }\r\n  }, [lines]);\r\n\r\n  useEffect(() => {\r\n    if (points.bucketfill) {\r\n      newBucketfill(points.bucketfill, rectangles, setBucketfills);\r\n    }\r\n  }, [rectangles]);\r\n\r\n  useEffect(() => {\r\n    if (canvas[0]) {\r\n      setResult(\r\n        `${canvas[0].join(\"\")}\\n${lines[0].join(\"\")}\\n${rectangles[0].join(\r\n          \"\"\r\n        )}\\n${bucketfills[0].join(\"\")}`\r\n      );\r\n    }\r\n  }, [bucketfills]);\r\n\r\n  const downloadTxtFile = () => {\r\n    if (result.length) {\r\n      const element = document.createElement(\"a\");\r\n      const file = new Blob([result], { type: \"text/plain;charset=utf-8\" });\r\n      element.href = URL.createObjectURL(file);\r\n      element.download = \"output.txt\";\r\n      document.body.appendChild(element);\r\n      element.click();\r\n    } else {\r\n      alert(\"No data to download!\");\r\n    }\r\n  };\r\n  const text = result.length ? (\r\n    <xmp>{result}</xmp>\r\n  ) : (\r\n    <xmp>No data avalibale</xmp>\r\n  );\r\n  const body = (\r\n    <Form>\r\n      <Row>\r\n        <Col md=\"auto\">\r\n          <Form.File\r\n            id=\"file\"\r\n            label={fileName ? fileName : \"Choose file\"}\r\n            custom\r\n            accept=\"text/plain\"\r\n            feedbackTooltip\r\n            onChange={uploadFile}\r\n          />\r\n        </Col>\r\n        <Col md=\"auto\">\r\n          <Button onClick={downloadTxtFile}>Download output</Button>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col className=\"colForm\" id=\"preview\">\r\n          {text}\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  );\r\n  return body;\r\n}\r\n\r\nexport default FormFile;\r\n","export const newCanvas = ({ width, height }, setCanvas) => {\r\n  if (width && height) {\r\n    const borderH = \"-\".repeat(+width + 2);\r\n    const borderV = [];\r\n    for (let i = 1; i <= +height; i++) {\r\n      borderV.push(\"\\n|\" + \" \".repeat(+width) + \"|\");\r\n    }\r\n    const newArr = [borderH, ...borderV, `\\n${borderH}`];\r\n    setCanvas([newArr]);\r\n  }\r\n};\r\n\r\nexport const newLine = (lines, canvas, setLines) => {\r\n  if (canvas[0]) {\r\n    const canvasCopy = canvas[0].slice();\r\n    lines.forEach((line) => {\r\n      canvasCopy.map((str, index) => {\r\n        if (\r\n          line.y1 <= index &&\r\n          line.y2 >= index &&\r\n          index < canvasCopy.length - 1\r\n        ) {\r\n          try {\r\n            const oldLine = str;\r\n            let newLine = oldLine.split(\"\");\r\n            for (let el = +line.x1 + 1; el <= +line.x2 + 1; el++) {\r\n              if (newLine[el] === \" \") {\r\n                newLine[el] = \"x\";\r\n              } else if (newLine[el] === \"x\") {\r\n                newLine[el] = \"x\";\r\n              }\r\n            }\r\n            newLine = newLine.join(\"\");\r\n            if (newLine !== oldLine) {\r\n              canvasCopy.splice(index, 1, newLine);\r\n            }\r\n          } catch (e) {\r\n            console.log(\"Invalid range\");\r\n          }\r\n        }\r\n      });\r\n    });\r\n    setLines([canvasCopy]);\r\n  }\r\n};\r\n\r\nexport const newRectangle = (rectangle, lines, setRectangles) => {\r\n  if (lines[0]) {\r\n    const linesCopy = lines[0].slice();\r\n    rectangle.forEach((line) => {\r\n      linesCopy.map((str, index) => {\r\n        const isVertical = +line.y1 <= index && +line.y2 >= index;\r\n        const isHorizontal = line.y1 == index || line.y2 == index;\r\n        if (isVertical) {\r\n          try {\r\n            const oldLine = str;\r\n            let newLine = oldLine.split(\"\");\r\n            for (let el = +line.x1 + 1; el <= +line.x2 + 1; el++) {\r\n              if (newLine[el] === \" \") {\r\n                if (el == +line.x1 + 1 || el == +line.x2 + 1) {\r\n                  newLine[el] = \"x\";\r\n                } else if (isHorizontal) {\r\n                  newLine[el] = \"x\";\r\n                }\r\n              } else if (newLine[el] === \"x\") {\r\n                newLine[el] = \"x\";\r\n              }\r\n            }\r\n            newLine = newLine.join(\"\");\r\n            if (newLine !== oldLine) {\r\n              linesCopy.splice(index, 1, newLine);\r\n            }\r\n          } catch (e) {\r\n            console.log(\"Invalid range\");\r\n          }\r\n        }\r\n      });\r\n    });\r\n    setRectangles([linesCopy]);\r\n  }\r\n};\r\n\r\nexport const newBucketfill = ({ x, y, color }, rectangles, setBucketfills) => {\r\n  if (rectangles[0]) {\r\n    const rectanglesCopy = rectangles[0].slice();\r\n    const point = { x, y };\r\n    const queue = [];\r\n    queue.push(point);\r\n    try {\r\n      while (queue.length) {\r\n        let { x, y } = queue.pop();\r\n        rectanglesCopy.map((str, index) => {\r\n          const oldLine = str;\r\n          let newLine = oldLine.split(\"\");\r\n          for (let el = 1; el <= +newLine.length - 1; el++) {\r\n            if (el == +x && index == +y) {\r\n              if (\r\n                newLine[el] !== \"x\" &&\r\n                newLine[el] !== \"|\" &&\r\n                newLine[el] !== \"-\" &&\r\n                newLine[el] !== color\r\n              ) {\r\n                newLine[el] = color;\r\n\r\n                queue.push({ x: +x + 1, y });\r\n                queue.push({ x: +x - 1, y });\r\n                queue.push({ x, y: +y - 1 });\r\n                queue.push({ x, y: +y + 1 });\r\n              }\r\n            }\r\n          }\r\n          newLine = newLine.join(\"\");\r\n          if (newLine !== oldLine) {\r\n            rectanglesCopy.splice(index, 1, newLine);\r\n          }\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(\"Invalid range\");\r\n    }\r\n    setBucketfills([rectanglesCopy]);\r\n  }\r\n};\r\n","export const parse = (file, setPoints) => {\r\n  const reader = new FileReader();\r\n  reader.readAsText(file);\r\n  reader.onload = function () {\r\n    const newFile = reader.result.split(\"\\n\");\r\n    newFile.forEach((el) => {\r\n      const arr = el.split(\" \");\r\n      const positions = arr.splice(1);\r\n      switch (arr[0]) {\r\n        case \"C\":\r\n          setPoints((points) => ({\r\n            ...points,\r\n            canvas: {\r\n              width: positions[0],\r\n              height: positions[1],\r\n            },\r\n          }));\r\n\r\n          break;\r\n        case \"L\":\r\n          setPoints((points) => ({\r\n            ...points,\r\n            line: [\r\n              ...points.line,\r\n              {\r\n                x1: positions[0],\r\n                y1: positions[1],\r\n                x2: positions[2],\r\n                y2: positions[3],\r\n              },\r\n            ],\r\n          }));\r\n          break;\r\n        case \"R\":\r\n          setPoints((points) => ({\r\n            ...points,\r\n            rectangle: [\r\n              ...points.rectangle,\r\n              {\r\n                x1: positions[0],\r\n                y1: positions[1],\r\n                x2: positions[2],\r\n                y2: positions[3],\r\n              },\r\n            ],\r\n          }));\r\n\r\n          break;\r\n        case \"B\":\r\n          setPoints((points) => ({\r\n            ...points,\r\n            bucketfill: {\r\n              x: positions[0],\r\n              y: positions[1],\r\n              color: positions[2],\r\n            },\r\n          }));\r\n      }\r\n    });\r\n  };\r\n  reader.onerror = function () {\r\n    console.log(reader.error);\r\n  };\r\n  reader.loadend  = function () {\r\n    reader.abort()\r\n  };\r\n\r\n};\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nimport FormFile from \"./components/Form\";\nfunction App() {\n  return (\n    <Container fluid=\"md\">\n\n      <Row>\n        <Col className=\"colForm\">\n          <FormFile />\n        </Col>\n      </Row>\n    \n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}